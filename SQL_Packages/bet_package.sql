CREATE OR REPLACE PACKAGE BETPACKAGE IS
TYPE BET_DATA IS RECORD (BETNAME BET.BET_NAME%TYPE, BETMONEY BET.BET_MONEY%TYPE, BETMULT BET.BET_MULTIPLIER%TYPE); 
TYPE TBLBETDATA IS TABLE OF BET_DATA;
TYPE ID_DATA IS RECORD (BETID BET.BET_ID%TYPE);
TYPE TBLIDDATA IS TABLE OF ID_DATA;
FUNCTION GET_BET(USERLOGIN IN VARCHAR2) RETURN TBLBETDATA PIPELINED;
FUNCTION GET_BETS_ID(USERLOGIN IN VARCHAR2) RETURN TBLIDDATA PIPELINED;
FUNCTION GENERATE_BETID RETURN NUMBER;
FUNCTION CREATE_BET(USERLOGIN IN VARCHAR2, BETID IN NUMBER, BETMONEY IN FLOAT, BETMULTIPLIER IN NUMBER, BETDATE IN DATE, FIELD IN NUMBER) RETURN VARCHAR2;
FUNCTION SET_BET(BETID IN NUMBER, LOGIN IN VARCHAR2) RETURN VARCHAR2;
PROCEDURE DOUBLE_BET(USERLOG IN VARCHAR2);
PROCEDURE DELETE_BET(BETID IN NUMBER);
PROCEDURE CANCEL_BET(USERLOG IN VARCHAR2);
END BETPACKAGE;
/
CREATE OR REPLACE PACKAGE BODY BETPACKAGE IS
FUNCTION GET_BET(USERLOGIN IN VARCHAR2) RETURN TBLBETDATA PIPELINED
IS
BETID NUMBER;
BEGIN

 FOR ITER IN (SELECT BET_ID FROM CASINO WHERE USER_LOGIN=USERLOGIN) LOOP
    FOR CURR IN (
    SELECT BET_NAME, BET_MONEY, BET_MULTIPLIER FROM BET WHERE BET_ID=ITER.BET_ID AND DELETED IS NULL
    ) LOOP
        PIPE ROW (CURR);
    END LOOP;
    END LOOP;
END GET_BET;
FUNCTION GENERATE_BETID RETURN NUMBER IS
MAXID NUMBER:=0;
BEGIN
    SELECT MAX(BET_ID) INTO MAXID FROM BET;
    RETURN MAXID+1;
END;
FUNCTION GET_BETS_ID(USERLOGIN IN VARCHAR2) RETURN TBLIDDATA PIPELINED
IS
BEGIN
    FOR CURR IN (SELECT BET_ID FROM CASINO WHERE USER_LOGIN = USERLOGIN  ) LOOP
        PIPE ROW (CURR);
    END LOOP;
END GET_BETS_ID;
FUNCTION CREATE_BET(USERLOGIN IN VARCHAR2, BETID IN NUMBER, BETMONEY IN FLOAT, BETMULTIPLIER IN NUMBER, BETDATE IN DATE, FIELD IN NUMBER) RETURN VARCHAR2 IS
ANYROW NUMBER;
RES VARCHAR2(100);
TESTVAR NUMBER;
BEGIN
    SELECT COUNT(*) INTO ANYROW FROM BET WHERE BET_ID=BETID;
    IF ANYROW>=1 THEN DBMS_OUTPUT.PUT_LINE('ALREADY EXISTS');RETURN 'FALSE'; END IF;
    INSERT INTO BET (BET_ID, BET_MONEY, BET_MULTIPLIER, BET_DATE, BET_NAME) VALUES (BETID, BETMONEY, BETMULTIPLIER, BETDATE, FIELD);
    RES:=BETPACKAGE.SET_BET(BETID, USERLOGIN);
    IF RES = 'TRUE' THEN
    RETURN 'TRUE';
    ELSE RETURN 'FALSE';
    END IF;
      EXCEPTION WHEN DUP_VAL_ON_INDEX THEN RETURN 'FALSE';

    WHEN VALUE_ERROR THEN RETURN 'FALSE';
    WHEN INVALID_NUMBER THEN RETURN 'FALSE';
    WHEN SYS_INVALID_ROWID THEN RETURN 'FALSE';
        WHEN OTHERS THEN RETURN 'FALSE';
END CREATE_BET;
FUNCTION SET_BET(BETID IN NUMBER, LOGIN IN VARCHAR2) RETURN VARCHAR2 IS
betdate DATE;
counter number;
money FLOAT;
mult number;
playerBalance number;
BEGIN
Select count(bet_id) into counter from BET where bet_id=BETID;
if counter = 0 then
    RETURN 'FALSE';
else
    SELECT COUNT(BET_ID) INTO COUNTER FROM CASINO WHERE BET_ID=BETID;
    IF COUNTER > 0 THEN DBMS_OUTPUT.PUT_LINE('ALREADY IN GAME'); RETURN 'FALSE'; END IF;
    Select bet_money into money from BET where bet_id=BETID;
    Select bet_multiplier into mult from BET where bet_id=BETID;
    Select user_money into playerBalance from "USER" where USER_LOGIN=LOGIN;
     if playerBalance-money >= 0 then
        USERPACKAGE.CHANGE_PLAYER_BALANCE(LOGIN,-money);
        Select BET_DATE into betdate from bet where bet_id=BETID;
        INSERT INTO CASINO (USER_LOGIN, BET_ID, BET_DATE) VALUES (LOGIN, BETID, betdate);
            RETURN 'TRUE';
    else RETURN 'FALSE';
    end if;   
end if;
    EXCEPTION WHEN DUP_VAL_ON_INDEX THEN RETURN 'FALSE';
    WHEN OTHERS THEN RETURN 'FALSE';
END SET_BET;
PROCEDURE DOUBLE_BET(USERLOG IN VARCHAR2) IS
MULTIPLIER NUMBER(2);
counter number;
money float;
BETID NUMBER;
USERMONEY FLOAT;
BEGIN
    SELECT MAX(BET_ID) INTO BETID FROM CASINO WHERE USER_LOGIN=USERLOG;
SELECT COUNT(BET_ID) INTO COUNTER FROM BET WHERE BET_ID=BETID;
IF COUNTER = 0 THEN
    DBMS_OUTPUT.PUT_LINE('NO BET EXISTS'); RETURN;
 ELSE
    SELECT BET_MULTIPLIER INTO MULTIPLIER FROM BET WHERE BET_ID=BETID;
    SELECT BET_MONEY INTO money FROM BET WHERE BET_ID=BETID;
    SELECT USER_MONEY INTO USERMONEY FROM "USER" WHERE USER_LOGIN=USERLOG;
    IF USERMONEY < money     THEN RETURN; END IF;
    USERPACKAGE.CHANGE_PLAYER_BALANCE(USERLOG,-money);
    UPDATE BET SET BET_MULTIPLIER=MULTIPLIER*2 WHERE BET_ID=BETID;
END IF;
END DOUBLE_BET;
PROCEDURE DELETE_BET(BETID IN NUMBER) IS
BETINGAME NUMBER;
BEGIN
    SELECT count(BET_ID) INTO BETINGAME FROM CASINO WHERE BET_ID=BETID;
    IF BETINGAME>=1 THEN DELETE FROM CASINO WHERE BET_ID=BETID; 
    END IF;
    SELECT COUNT(BET_ID) INTO BETINGAME FROM BET WHERE BET_ID=BETID;
    IF BETINGAME > 0 THEN
     DELETE FROM BET_VIEW WHERE BET_ID=BETID;
     ELSE DBMS_OUTPUT.PUT_LINE('NO BET EXISTS'); RETURN; END IF;
END DELETE_BET;
PROCEDURE CANCEL_BET(USERLOG IN VARCHAR2) IS
MONEY FLOAT;
MULT NUMBER;
COUNTER NUMBER:=0;
BETID NUMBER;
BEGIN
SELECT MAX(BET_ID) INTO BETID FROM CASINO WHERE USER_LOGIN=USERLOG;
    SELECT COUNT(BET_ID) INTO COUNTER FROM BET WHERE BET_ID=BETID;
    IF COUNTER=0 THEN DBMS_OUTPUT.PUT_LINE('NO SUCH BET'); RETURN;END IF;
    SELECT COUNT(BET_ID) INTO COUNTER FROM CASINO WHERE BET_ID=BETID;
    IF COUNTER=0 THEN DBMS_OUTPUT.PUT_LINE('no such bet'); RETURN; END IF;
    SELECT BET_MONEY INTO MONEY FROM BET WHERE BET_ID=BETID;
    SELECT BET_MULTIPLIER INTO MULT FROM BET WHERE BET_ID=BETID;
    MULT:=MULT/2;
    IF MULT=0 THEN MULT:=1; END IF;
    USERPACKAGE.CHANGE_PLAYER_BALANCE(USERLOG,MONEY*MULT);
    BETPACKAGE.DELETE_BET(BETID);
END CANCEL_BET;
END BETPACKAGE;
